{"version":3,"file":"1-timer-df423068.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n\n\n  function convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor((ms % hour) / minute);\n    const seconds = Math.floor((ms % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n\n  document.addEventListener('DOMContentLoaded', function() {\n    const datetimePicker = document.getElementById('datetime-picker');\n    const startButton = document.getElementById('startButton');\n    let countdownInterval;\n    let targetDate;\n\n\n    flatpickr(datetimePicker, {\n      enableTime: true,\n      time_24hr: true,\n      defaultDate: new Date(),\n      minuteIncrement: 1,\n      onClose: function(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate <= new Date()) {\n          iziToast.error({\n            title: 'Error',\n            message: 'Please choose a date in the future.'\n          });\n          startButton.disabled = true;\n        } else {\n          startButton.disabled = false;\n          targetDate = selectedDate;\n        }\n      }\n    });\n\n    \n    startButton.addEventListener('click', function() {\n      startButton.disabled = true;\n      datetimePicker.disabled = true;\n\n      countdownInterval = setInterval(function() {\n        const now = new Date();\n        const msDiff = targetDate - now;\n\n        if (msDiff <= 0) {\n          clearInterval(countdownInterval);\n          iziToast.success({\n            title: 'Countdown Finished',\n            message: 'The countdown timer has ended!'\n          });\n          datetimePicker.disabled = false;\n        } else {\n          const { days, hours, minutes, seconds } = convertMs(msDiff);\n          document.querySelector('[data-days]').textContent = addLeadingZero(days);\n          document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n          document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n          document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n        }\n      }, 1000);\n    });\n  });"],"names":["addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","datetimePicker","startButton","countdownInterval","targetDate","flatpickr","selectedDates","selectedDate","msDiff"],"mappings":"+uBAIA,SAASA,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAGD,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,SAAS,iBAAiB,mBAAoB,UAAW,CACvD,MAAMC,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,eAAe,aAAa,EACzD,IAAIC,EACAC,EAGJC,EAAUJ,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAS,SAASK,EAAe,CAC/B,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtB,SAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACrB,CAAW,EACDL,EAAY,SAAW,KAEvBA,EAAY,SAAW,GACvBE,EAAaG,EAEhB,CACP,CAAK,EAGDL,EAAY,iBAAiB,QAAS,UAAW,CAC/CA,EAAY,SAAW,GACvBD,EAAe,SAAW,GAE1BE,EAAoB,YAAY,UAAW,CAEzC,MAAMK,EAASJ,EADH,IAAI,KAGhB,GAAII,GAAU,EACZ,cAAcL,CAAiB,EAC/B,SAAS,QAAQ,CACf,MAAO,qBACP,QAAS,gCACrB,CAAW,EACDF,EAAe,SAAW,OACrB,CACL,KAAM,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUa,CAAM,EAC1D,SAAS,cAAc,aAAa,EAAE,YAAcf,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcN,EAAeO,CAAO,CAC9E,CACF,EAAE,GAAI,CACb,CAAK,CACL,CAAG"}